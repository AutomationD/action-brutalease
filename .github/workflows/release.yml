name: Release

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

on:
  release:
    types:
      - published

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ github.event.release.tag_name }}
            type=semver,pattern={{major}}.{{minor}},value=${{ github.event.release.tag_name }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Update action.yml with current version
        run: |
          # Update the Docker image version in action.yml
          sed -i "s|ghcr.io/dimmkirr/action-brutalease:.*'|ghcr.io/dimmkirr/action-brutalease:${{ github.event.release.tag_name }}'|g" action.yml

          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Fetch all branches and tags
          git fetch --all

          # Create a temporary branch from the main branch
          git checkout main

          # Update action.yml on the main branch
          sed -i "s|ghcr.io/dimmkirr/action-brutalease:.*'|ghcr.io/dimmkirr/action-brutalease:${{ github.event.release.tag_name }}'|g" action.yml

          # Commit the changes to main
          git add action.yml
          git commit -m "Update Docker image version to ${{ github.event.release.tag_name }}"

          # Push the changes to main
          git push origin main

          # Move the release tag to the new commit
          git tag -f ${{ github.event.release.tag_name }}
          git push --force origin ${{ github.event.release.tag_name }}

          # Extract major version from the tag
          MAJOR_VERSION=$(echo "${{ github.event.release.tag_name }}" | cut -d'.' -f1)
          echo "Full tag: ${{ github.event.release.tag_name }}"
          echo "Major version determined: $MAJOR_VERSION"

          # Create/Move the major version tag (e.g., v1, v2)
          echo "Tagging commit with major version tag: $MAJOR_VERSION"
          git tag -f "$MAJOR_VERSION"
          git push --force origin "$MAJOR_VERSION"


  generate-banner:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: Checkout updated code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Generate Banner
        uses: ./
        with:
          version: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
          repo_url: ${{ github.repository }}
          output: release-banner.png
          project_name: Brutalease
          project_description: Neo-brutalist release banner
          theme: |
            bgOne: '#009DFF'
            bgTwo: '#ffffff'
            bgThree: '#f5f5f5'
            accentOne: '#ffac00'
            accentTwo: '#FFE3D3'
            accentThree: '#888'
            text: '#000000'
            fontFamily: 'Roboto'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-banner
          path: release-banner.png

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          files: release-banner.png
          tag_name: ${{ github.event.release.tag_name }}

      - name: Update release description with image
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          IMAGE_URL: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/release-banner.png
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get current release body
          RELEASE_BODY=$(gh release view "$RELEASE_TAG" --json body -q .body)

          # Create a temporary file with the new release body
          echo -e "![Release Banner]($IMAGE_URL)\n\n$RELEASE_BODY" > new_body.md

          # Update the release with the new body
          gh release edit "$RELEASE_TAG" --notes-file new_body.md
