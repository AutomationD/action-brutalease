name: Release

on:
  release:
    types:
      - published

permissions:
  contents: write

jobs:
  generate-badge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Banner
        uses: ./
        with:
          version: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
          repo_url: ${{ github.repository }}
          output: release-banner.png
          project_name: Brutalease
          project_description: Neo-brutalist release banner
          logo: ${{ github.workspace }}/test/data/logo.png

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-banner
          path: release-banner.png

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          files: release-banner.png
          tag_name: ${{ github.event.release.tag_name }}

      - name: Update release description with image
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          IMAGE_URL: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/release-banner.png
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get current release body
          RELEASE_BODY=$(gh release view "$RELEASE_TAG" --json body -q .body)

          # Create a temporary file with the new release body
          echo -e "![Release Banner]($IMAGE_URL)\n\n$RELEASE_BODY" > new_body.md

          # Update the release with the new body
          gh release edit "$RELEASE_TAG" --notes-file new_body.md
